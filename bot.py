import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
from dotenv import load_dotenv
import redis

from modules.models import Session, User, TourRequest
from modules.user_handlers import (
    start, handle_phone, show_statistics,
    request_tour, handle_tour_request
)
from modules.admin_handlers import (
    admin_panel, show_users, show_users_for_bonus,
    handle_user_identifier, handle_bonus_amount, handle_bonus_description,
    show_tour_requests, set_admin, remove_admin,
    show_users_list, search_user, handle_user_search, show_users_statistics,
    show_bonus_history, show_tour_request_details, complete_tour_request,
    show_tour_requests_menu, search_tour_request, handle_tour_search
)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Redis
redis_client = redis.Redis(host='localhost', port=6379, db=0)


async def check_user_authorization(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    user_id = update.effective_user.id
    with Session() as session:
        user = session.query(User).filter_by(telegram_id=str(user_id)).first()
        return user


async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ—á—ñ–∫—É—î–º–æ –≤–≤–µ–¥–µ–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if context.user_data.get('waiting_for_user_identifier'):
        await handle_user_identifier(update, context)
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ—á—ñ–∫—É—î–º–æ –≤–≤–µ–¥–µ–Ω–Ω—è —Å—É–º–∏ –±–æ–Ω—É—Å—É
    if context.user_data.get('waiting_for_bonus_amount'):
        await handle_bonus_amount(update, context)
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ—á—ñ–∫—É—î–º–æ –≤–≤–µ–¥–µ–Ω–Ω—è –æ–ø–∏—Å—É –±–æ–Ω—É—Å—É
    if context.user_data.get('waiting_for_bonus_description'):
        await handle_bonus_description(update, context)
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ—á—ñ–∫—É—î–º–æ –ø–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if context.user_data.get('waiting_for_user_search'):
        await handle_user_search(update, context)
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ—á—ñ–∫—É—î–º–æ –ø–æ—à—É–∫ –∑–∞—è–≤–∫–∏
    if context.user_data.get('waiting_for_tour_search'):
        await handle_tour_search(update, context)
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user = await check_user_authorization(update, context)

    if not user:
        # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π - –ø–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        await start(update, context)
        return

    text = update.message.text

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user.is_admin:
        await handle_admin_text(update, context, text, user)
    else:
        await handle_user_text(update, context, text, user)


async def handle_user_text(update: Update, context: ContextTypes.DEFAULT_TYPE, text: str, user):
    """–û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –∑–≤–∏—á–∞–π–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
    if text == "üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        await show_statistics(update, context)
    elif text == "üèñ –ü—ñ–¥–±—ñ—Ä —Ç—É—Ä—É":
        await request_tour(update, context)
    elif text == "‚Ñπ –ü—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É":
        await update.message.reply_text(
            "–í–∏ –º–∞—î—Ç–µ —á—É–¥–æ–≤—É –Ω–∞–≥–æ–¥—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Å–≤–æ—î–º—É –¥—Ä—É–≥—É –æ—Ç—Ä–∏–º–∞—Ç–∏ —è–∫—ñ—Å–Ω—É –ø–æ—Å–ª—É–≥—É –∑ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É: –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è–π—Ç–µ —É–Ω—ñ–∫–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —á–µ—Ä–µ–∑ —Ü–µ–π –±–æ—Ç –∞–±–æ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –π–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é (—Ç–∞–∫–æ–∂ —Ç—É—Ç), —â–æ–± –Ω–∞—à –Ω–∞–π–∫—Ä–∞—â–∏–π —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç –∑–≤'—è–∑–∞–≤—Å—è –∑ –Ω–∏–º.\n"
            "–ö–æ–ª–∏ –í–∞—à –¥—Ä—É–≥ –æ—Ç—Ä–∏–º–∞—î –ø–æ—Å–ª—É–≥—É –∑–¥—ñ–π—Å–Ω–∏–≤—à–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Ç—É—Ä—É - –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è –±–æ–Ω—É—Å 800 –≥—Ä–Ω.\n"
            "–ö–æ–ª–∏ –í–∞—à—ñ –¥—Ä—É–∑—ñ –ø–æ—á–Ω—É—Ç—å —Ä–æ–∑–≤–∏–≤–∞—Ç–∏ —Å–≤–æ—é –º–µ—Ä–µ–∂—É —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ —Å–≤–æ—ó –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ —Ö—Ç–æ—Å—å —ñ–∑ –Ω–∏—Ö –æ—Ç—Ä–∏–º—É—î –ø–æ—Å–ª—É–≥—É, —Ç–æ –í–∞–º —Ç–∞–∫–æ–∂ –Ω–∞—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è –±–æ–Ω—É—Å–∏, –≤ —Ç–∞–∫–æ–º—É —Ä–æ–∑–º—ñ—Ä—ñ:\n"
            "2 –ª–∞–Ω–∫–∞ = 400 –≥—Ä–Ω\n"
            "3 –ª–∞–Ω–∫–∞ —ñ –≤—Å—ñ –Ω–∞—Å—Ç—É–ø–Ω—ñ = 200 –≥—Ä–Ω.\n"
            "–í—Å—ñ –±–æ–Ω—É—Å–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –Ω–∞ –≤–∞—à–æ–º—É –æ—Å–æ–±–æ–≤–æ–º—É —Ä–∞—Ö—É–Ω–∫—É —ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –í–∞–º–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É —Å–≤–æ—î –ø–æ–¥–æ—Ä–æ–∂—ñ.\n\n"
            "–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–∞–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π –Ω–µ –æ–±–º–µ–∂–µ–Ω–∞"
        )
    elif text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏":
        await update.message.reply_text(
            "üìû –ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏:\n\n"
            "üåê –°–∞–π—Ç: www.poihaluznamu.com\n"
            "üì± Viber/telegram: +38(073)676-88-66\n"
            "üì± –¢–µ–ª–µ—Ñ–æ–Ω: +38(067)676-88-86\n"
            "üì± Instagram: [@poihalu_z_namu_lviv](https://www.instagram.com/poihalu_z_namu_lviv?utm_source=ig_web_button_share_sheet&igsh=ZDNlZDc0MzIxNw==)",
            parse_mode='Markdown'
        )

    elif text == "üîó –ú–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è":
        await update.message.reply_text(
            f"üîó –í–∞—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:\n"
            f"t.me/MyNewArtembot?start={user.referral_code}"
        )
    elif text == "üõ† –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å":
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω
        with Session() as session:
            current_user = session.query(User).filter_by(telegram_id=user.telegram_id).first()
            if current_user and current_user.is_admin:
                await admin_panel(update, context)
            else:
                await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ!")
    elif context.user_data.get('waiting_for_tour_request'):
        await handle_tour_request(update, context)
    else:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é")


async def handle_admin_text(update: Update, context: ContextTypes.DEFAULT_TYPE, text: str, user):
    """–û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤"""
    if text == "üë• –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏":
        await show_users(update, context)
    elif text == "üìã –ó–∞—è–≤–∫–∏ –Ω–∞ —Ç—É—Ä–∏":
        await show_tour_requests_menu(update, context)
    elif text == "üí∞ –î–æ–¥–∞—Ç–∏ –±–æ–Ω—É—Å":
        await show_users_for_bonus(update, context)
    elif text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º–∏":
        with Session() as session:
            total_users = session.query(User).count()
            active_users = session.query(User).filter(User.balance > 0).count()
            total_balance = session.query(User).with_entities(User.balance).all()
            total_balance_sum = sum([b[0] for b in total_balance if b[0]])

            await update.message.reply_text(
                f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–ò\n\n"
                f"üë• –í—Å—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {total_users}\n"
                f"üí∞ –ê–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {active_users}\n"
                f"üíµ –ó–∞–≥–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å: {total_balance_sum} –≥—Ä–Ω"
            )
    elif text == "üë§ –†–µ–∂–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞":
        # –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤ —Ä–µ–∂–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        keyboard = [
            [KeyboardButton("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton("üîó –ú–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è")],
            [KeyboardButton("üèñ –ü—ñ–¥–±—ñ—Ä —Ç—É—Ä—É")],
            [KeyboardButton("‚Ñπ –ü—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É")],
            [KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏")],
            [KeyboardButton("üõ† –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        await update.message.reply_text(
            "–ü–µ—Ä–µ–º–∫–Ω–µ–Ω–æ –≤ —Ä–µ–∂–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
            reply_markup=reply_markup
        )
    elif text == "üõ† –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å":
        await admin_panel(update, context)
    else:
        # –Ø–∫—â–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞ –≤ –∞–¥–º—ñ–Ω —Ä–µ–∂–∏–º—ñ, –æ–±—Ä–æ–±–ª—è—î–º–æ —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        await handle_user_text(update, context, text, user)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Ç–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥—É"""
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –∫–æ–º–∞–Ω–¥–∏
    args = context.args
    referral_code = args[0] if args else None

    user = await check_user_authorization(update, context)

    if user:
        # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π - –ø–æ–∫–∞–∑—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –º–µ–Ω—é
        keyboard = [
            [KeyboardButton("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton("üîó –ú–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è")],
            [KeyboardButton("üèñ –ü—ñ–¥–±—ñ—Ä —Ç—É—Ä—É")],
            [KeyboardButton("‚Ñπ –ü—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É")],
            [KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏")],
            [KeyboardButton("üõ† –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        await update.message.reply_text(
            f"–í—ñ—Ç–∞—é! –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ ‚úÖ",
            reply_markup=reply_markup
        )
    else:
        # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π - –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ
        if referral_code:
            context.user_data['referral_code'] = referral_code
            await update.message.reply_text(f"–í—ñ—Ç–∞—é! –í–∏ –ø–µ—Ä–µ–π—à–ª–∏ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º.\n")
        # –ü–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
        await start(update, context)


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(os.getenv('TELEGRAM_TOKEN')).build()

    # –û—Å–Ω–æ–≤–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(MessageHandler(filters.CONTACT, handle_phone))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    # –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("stats", show_statistics))
    application.add_handler(CommandHandler("tour", request_tour))
    application.add_handler(CommandHandler("admin", admin_panel))
    application.add_handler(CommandHandler("setadmin", set_admin))
    application.add_handler(CommandHandler("removeadmin", remove_admin))

    # –û–±—Ä–æ–±–Ω–∏–∫–∏ callback-–∑–∞–ø–∏—Ç—ñ–≤
    application.add_handler(CallbackQueryHandler(show_users_list, pattern='^admin_users_list$'))
    application.add_handler(CallbackQueryHandler(search_user, pattern='^admin_users_search$'))
    application.add_handler(CallbackQueryHandler(show_users_statistics, pattern='^admin_users_stats$'))
    application.add_handler(CallbackQueryHandler(show_users, pattern='^admin_users$'))
    application.add_handler(CallbackQueryHandler(show_users_for_bonus, pattern='^bonus_user_\d+$'))
    application.add_handler(CallbackQueryHandler(show_bonus_history, pattern='^bonus_history_\d+$'))
    application.add_handler(CallbackQueryHandler(show_tour_requests, pattern='^admin_tours_list$'))
    application.add_handler(CallbackQueryHandler(search_tour_request, pattern='^admin_tours_search$'))
    application.add_handler(CallbackQueryHandler(show_tour_requests_menu, pattern='^admin_tours$'))
    application.add_handler(CallbackQueryHandler(show_tour_request_details, pattern='^tour_request_\d+$'))
    application.add_handler(CallbackQueryHandler(complete_tour_request, pattern='^complete_request_\d+$'))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()


if __name__ == '__main__':
    main()