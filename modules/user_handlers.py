import random
import string
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from .models import Session, User, ReferralBonus, TourRequest
from .redis_client import (
    set_user_data, get_user_data, set_referral_code,
    get_referral_user_id, increment_user_balance,
    get_user_balance, set_tour_request_status,
    get_tour_request_status, add_to_recent_requests,
    get_recent_requests, clear_users_list_cache
)


def generate_referral_code():
    """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥—É"""
    code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
    return code


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start"""
    keyboard = [
        [KeyboardButton("üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

    await update.message.reply_text(
        "–í—ñ—Ç–∞—é! –î–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É üì±",
        reply_markup=reply_markup
    )


async def handle_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    if not update.message.contact:
        await update.message.reply_text("‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤—ñ–π –∫–æ–Ω—Ç–∞–∫—Ç")
        return

    phone_number = update.message.contact.phone_number
    user_id = str(update.effective_user.id)

    with Session() as session:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ —ñ—Å–Ω—É—î
        existing_user = session.query(User).filter_by(telegram_id=user_id).first()
        if existing_user:
            await update.message.reply_text("‚úÖ –í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ!")
            return

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥
        referral_code = context.user_data.get('referral_code')
        referred_by = None
        referrer = None
        second_level_referrer = None
        third_level_referrer = None

        if referral_code:
            # –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤ Redis
            referrer = session.query(User).filter_by(referral_code=referral_code).first()
            if referrer:
                referred_by = referrer.id
                # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ Redis –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
                set_referral_code(referral_code, str(referrer.id))

                referrer.balance += 100
                bonus = ReferralBonus(
                    user_id=referrer.id,
                    amount=100,
                    description=f"–ë–æ–Ω—É—Å –∑–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {phone_number}"
                )
                session.add(bonus)
                # –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –≤ Redis
                increment_user_balance(str(referrer.telegram_id), 100)

                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —É –∑–∞–ø—Ä–æ—à—É–≤–∞—á–∞ —Å–≤—ñ–π –∑–∞–ø—Ä–æ—à—É–≤–∞—á (–¥—Ä—É–≥–∏–π —Ä—ñ–≤–µ–Ω—å)
                if referrer.referred_by:
                    second_level_referrer = session.query(User).get(referrer.referred_by)
                    if second_level_referrer:
                        # –ù–∞—Ä–∞—Ö–æ–≤—É—î–º–æ –±–æ–Ω—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –¥—Ä—É–≥–æ–≥–æ —Ä—ñ–≤–Ω—è
                        second_level_referrer.balance += 50
                        bonus = ReferralBonus(
                            user_id=second_level_referrer.id,
                            amount=50,
                            description=f"–ë–æ–Ω—É—Å –∑–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {phone_number} (2-–π —Ä—ñ–≤–µ–Ω—å)"
                        )
                        session.add(bonus)
                        # –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –≤ Redis
                        increment_user_balance(str(second_level_referrer.telegram_id), 50)

                        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥—Ä—É–≥–æ–≥–æ —Ä—ñ–≤–Ω—è —Å–≤—ñ–π –∑–∞–ø—Ä–æ—à—É–≤–∞—á (—Ç—Ä–µ—Ç—ñ–π —Ä—ñ–≤–µ–Ω—å)
                        if second_level_referrer.referred_by:
                            third_level_referrer = session.query(User).get(second_level_referrer.referred_by)
                            if third_level_referrer:
                                # –ù–∞—Ä–∞—Ö–æ–≤—É—î–º–æ –±–æ–Ω—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —Ç—Ä–µ—Ç—å–æ–≥–æ —Ä—ñ–≤–Ω—è
                                third_level_referrer.balance += 50
                                bonus = ReferralBonus(
                                    user_id=third_level_referrer.id,
                                    amount=50,
                                    description=f"–ë–æ–Ω—É—Å –∑–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {phone_number} (3-–π —Ä—ñ–≤–µ–Ω—å)"
                                )
                                session.add(bonus)
                                # –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –≤ Redis
                                increment_user_balance(str(third_level_referrer.telegram_id), 50)

        # –ì–µ–Ω–µ—Ä—É—î–º–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        new_referral_code = generate_referral_code()
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        new_user = User(
            telegram_id=user_id,
            phone_number=phone_number,
            referred_by=referred_by,
            referral_code=new_referral_code
        )
        session.add(new_user)
        session.commit()

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ Redis
        user_data = {
            'id': new_user.id,  # –î–æ–¥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            'telegram_id': user_id,
            'phone_number': phone_number,
            'referral_code': new_referral_code,
            'referred_by': referred_by,
            'balance': 0.0,
            'is_admin': False,
            'created_at': new_user.created_at.strftime('%d.%m.%Y')
        }
        set_user_data(user_id, user_data)
        set_referral_code(new_referral_code, user_id)

        # –û—á–∏—â–∞—î–º–æ –∫–µ—à —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        clear_users_list_cache()

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é
        if referrer:
            await update.message.reply_text(
                "‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!\n\n"
                "–í–∞—à –¥—Ä—É–≥ –æ—Ç—Ä–∏–º–∞–≤ –±–æ–Ω—É—Å 100 –≥—Ä–Ω!\n"
                "–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ:\n"
                "‚îú‚îÄ‚îÄ –ó–∞–ø—Ä–æ—à—É–≤–∞—Ç–∏ –¥—Ä—É–∑—ñ–≤\n"
                "‚îú‚îÄ‚îÄ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –±–æ–Ω—É—Å–∏\n"
                "‚îî‚îÄ‚îÄ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –±–æ—Ç–∞"
            )
        else:
            await update.message.reply_text(
                "‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!\n\n"
                "–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ:\n"
                "‚îú‚îÄ‚îÄ –ó–∞–ø—Ä–æ—à—É–≤–∞—Ç–∏ –¥—Ä—É–∑—ñ–≤\n"
                "‚îú‚îÄ‚îÄ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –±–æ–Ω—É—Å–∏\n"
                "‚îî‚îÄ‚îÄ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –±–æ—Ç–∞"
            )

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ø—Ä–æ—à—É–≤–∞—á—É –ø—Ä–æ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –±–æ–Ω—É—Å—É
        if referred_by:
            try:
                referrer_user = session.query(User).get(referred_by)
                await context.bot.send_message(
                    chat_id=referrer_user.telegram_id,
                    text=f"üí∞ –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ +100 –≥—Ä–Ω!\n"
                         f"üí¨ –ó–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {phone_number}"
                )
            except Exception as e:
                print(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ø—Ä–æ—à—É–≤–∞—á—É {referred_by}: {str(e)}")

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –¥—Ä—É–≥–æ–≥–æ —Ä—ñ–≤–Ω—è –ø—Ä–æ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –±–æ–Ω—É—Å—É
        if second_level_referrer:
            try:
                await context.bot.send_message(
                    chat_id=second_level_referrer.telegram_id,
                    text=f"üí∞ –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ +50 –≥—Ä–Ω!\n"
                         f"üí¨ –ó–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {phone_number} (2-–π —Ä—ñ–≤–µ–Ω—å)"
                )
            except Exception as e:
                print(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É 2-–≥–æ —Ä—ñ–≤–Ω—è {second_level_referrer.telegram_id}: {str(e)}")

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —Ç—Ä–µ—Ç—å–æ–≥–æ —Ä—ñ–≤–Ω—è –ø—Ä–æ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –±–æ–Ω—É—Å—É
        if third_level_referrer:
            try:
                await context.bot.send_message(
                    chat_id=third_level_referrer.telegram_id,
                    text=f"üí∞ –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ +50 –≥—Ä–Ω!\n"
                         f"üí¨ –ó–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {phone_number} (3-–π —Ä—ñ–≤–µ–Ω—å)"
                )
            except Exception as e:
                print(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É 3-–≥–æ —Ä—ñ–≤–Ω—è {third_level_referrer.telegram_id}: {str(e)}")

        # –ü–æ–∫–∞–∑—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–µ –º–µ–Ω—é
        keyboard = [
            [KeyboardButton("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton("üîó –ú–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è")],
            [KeyboardButton("üèñ –ü—ñ–¥–±—ñ—Ä —Ç—É—Ä—É")],
            [KeyboardButton("‚Ñπ –ü—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É")],
            [KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –æ–ø—Ü—ñ—é:", reply_markup=reply_markup)


async def show_statistics(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    user_id = str(update.effective_user.id)
    
    with Session() as session:
        # –°–ø–æ—á–∞—Ç–∫—É –±–µ—Ä–µ–º–æ –¥–∞–Ω—ñ –∑ –±–∞–∑–∏
        user = session.query(User).filter_by(telegram_id=user_id).first()
        if not user:
            await update.message.reply_text("–°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è!")
            return

        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤
        first_level = session.query(User).filter_by(referred_by=user.id).count()
        second_level = session.query(User).filter(
            User.referred_by.in_(
                session.query(User.id).filter_by(referred_by=user.id)
            )
        ).count()
        third_level = session.query(User).filter(
            User.referred_by.in_(
                session.query(User.id).filter(
                    User.referred_by.in_(
                        session.query(User.id).filter_by(referred_by=user.id)
                    )
                )
            )
        ).count()

        # –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ Redis
        user_data = {
            'id': user.id,
            'telegram_id': user_id,
            'phone_number': user.phone_number,
            'referral_code': user.referral_code,
            'referred_by': user.referred_by,
            'balance': user.balance,
            'is_admin': user.is_admin
        }
        set_user_data(user_id, user_data)

        stats_text = (
            f"üìä –í–ê–®–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê\n"
            f"üí∞ –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: {user.balance} –≥—Ä–Ω\n\n"
            f"üë• –í–ê–®–Ü –†–ï–§–ï–†–ê–õ–ò:\n"
            f"‚îú‚îÄ‚îÄ 1-–π —Ä—ñ–≤–µ–Ω—å: {first_level} –æ—Å—ñ–± ({first_level * 100} –≥—Ä–Ω)\n"
            f"‚îú‚îÄ‚îÄ 2-–π —Ä—ñ–≤–µ–Ω—å: {second_level} –æ—Å—ñ–± ({second_level * 50} –≥—Ä–Ω)\n"
            f"‚îî‚îÄ‚îÄ 3-–π —Ä—ñ–≤–µ–Ω—å: {third_level} –æ—Å—ñ–± ({third_level * 25} –≥—Ä–Ω)\n\n"
            f"üîó –í–∞—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:\n"
            f"t.me/TourWithUsBot?start={user.referral_code}"
        )

        keyboard = [[
            InlineKeyboardButton("üì§ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º", switch_inline_query=f"https://t.me/TourWithUsBot?start={user.referral_code}")
        ]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(stats_text, reply_markup=reply_markup, parse_mode='Markdown', disable_web_page_preview=True)


async def request_tour(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–ø–∏—Ç—É –Ω–∞ –ø—ñ–¥–±—ñ—Ä —Ç—É—Ä—É"""
    user_id = str(update.effective_user.id)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ Redis
    user_data = get_user_data(user_id)
    
    if not user_data:
        await update.message.reply_text("–°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è!")
        return

    await update.message.reply_text(
        "–û–ø–∏—à—ñ—Ç—å –≤–∞—à—ñ –ø–æ–±–∞–∂–∞–Ω–Ω—è –¥–æ —Ç—É—Ä—É\n"
        "(–∫—Ä–∞—ó–Ω–∞, –¥–∞—Ç–∏, –±—é–¥–∂–µ—Ç, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Å—ñ–±):"
    )
    context.user_data['waiting_for_tour_request'] = True


async def handle_tour_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç—É –∑ –æ–ø–∏—Å–æ–º —Ç—É—Ä—É"""
    if context.user_data.get('waiting_for_tour_request'):
        user_id = str(update.effective_user.id)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ Redis
        user_data = get_user_data(user_id)
        
        if not user_data:
            await update.message.reply_text("–°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è!")
            return

        with Session() as session:
            user = session.query(User).filter_by(telegram_id=user_id).first()
            if user:
                tour_request = TourRequest(
                    user_id=user.id,
                    description=update.message.text
                )
                session.add(tour_request)
                session.commit()

                # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –≤ Redis
                set_tour_request_status(tour_request.id, 'new')
                # –î–æ–¥–∞—î–º–æ –∑–∞—è–≤–∫—É –¥–æ —Å–ø–∏—Å–∫—É –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–∞—è–≤–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                add_to_recent_requests(tour_request.id, user_id)

                # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
                admins = session.query(User).filter_by(is_admin=True).all()
                for admin in admins:
                    try:
                        await context.bot.send_message(
                            chat_id=admin.telegram_id,
                            text=f"üîî –ù–û–í–ê –ó–ê–Ø–í–ö–ê –ù–ê –¢–£–†\n\n"
                                 f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {user.phone_number}\n"
                                 f"üìù –û–ø–∏—Å:\n{update.message.text}\n\n"
                                 f"üÜî ID –∑–∞—è–≤–∫–∏: {tour_request.id}\n"
                                 f"üìÖ –°—Ç–≤–æ—Ä–µ–Ω–æ: {tour_request.created_at.strftime('%d.%m.%Y %H:%M')}"
                        )
                    except Exception as e:
                        print(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É {admin.telegram_id}: {str(e)}")

                await update.message.reply_text(
                    "–î—è–∫—É—é! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n"
                    "–ó –≤–∞–º–∏ –∑–≤'—è–∂—É—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º –≥–æ–¥–∏–Ω–∏! ‚úÖ"
                )
                context.user_data['waiting_for_tour_request'] = False
            else:
                await update.message.reply_text("–°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è!")


async def handle_user_text(update: Update, context: ContextTypes.DEFAULT_TYPE, text: str, user):
    """–û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –∑–≤–∏—á–∞–π–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
    if text == "üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        await show_statistics(update, context)
    elif text == "üèñ –ü—ñ–¥–±—ñ—Ä —Ç—É—Ä—É":
        await request_tour(update, context)
    elif text == "‚Ñπ –ü—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É":
        await update.message.reply_text(
            "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É:\n\n"
            "–í–∏ –º–∞—î—Ç–µ —á—É–¥–æ–≤—É –Ω–∞–≥–æ–¥—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Å–≤–æ—î–º—É –¥—Ä—É–≥—É –æ—Ç—Ä–∏–º–∞—Ç–∏ —è–∫—ñ—Å–Ω—É –ø–æ—Å–ª—É–≥—É –∑ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É: –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ—î —É–Ω—ñ–∫–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —á–µ—Ä–µ–∑ —Ü–µ–π –±–æ—Ç, —â–æ–± –Ω–∞—à —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç –∑–≤ º—è–∑–∞–≤—Å—è –∑ –Ω–∏–º. –ó–∞ –∫–æ–∂–Ω—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –ø–æ –í–∞—à–æ–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—é, –í–∞–º –±—É–¥–µ –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 100 –≥—Ä–Ω.\n"
            "–ö–æ–ª–∏ –í–∞—à—ñ –¥—Ä—É–∑—ñ –ø–æ—á–Ω—É—Ç—å —Ä–æ–∑–≤–∏–≤–∞—Ç–∏ —Å–≤–æ—é –º–µ—Ä–µ–∂—É —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ —Å–≤–æ—ó –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —Ç–æ –í–∞–º —Ç–∞–∫–æ–∂ –Ω–∞—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è –±–æ–Ω—É—Å–∏, –≤ —Ç–∞–∫–æ–º—É —Ä–æ–∑–º—ñ—Ä—ñ:\n"
            "2 –ª–∞–Ω–∫–∞ = 50 –≥—Ä–Ω\n"
            "3 –ª–∞–Ω–∫–∞ —ñ –≤—Å—ñ –Ω–∞—Å—Ç—É–ø–Ω—ñ = 25 –≥—Ä–Ω.\n"
            "–ö–æ–ª–∏ –í–∞—à –¥—Ä—É–≥ –ø–æ –ø—Ä—è–º—ñ–π –í–∞—à—ñ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –æ—Ç—Ä–∏–º–∞—î –ø–æ—Å–ª—É–≥—É –∑–¥—ñ–π—Å–Ω–∏–≤—à–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Ç—É—Ä—É ‚Äî –í–∞–º –¥–æ–¥–∞—Ç–∫–æ–≤–æ –Ω–∞—Ä–∞—Ö—É—î—Ç—å—Å—è –±–æ–Ω—É—Å –≤ —Ä–æ–∑–º—ñ—Ä—ñ 800 –≥—Ä–Ω.\n"
            "–í—Å—ñ –±–æ–Ω—É—Å–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –Ω–∞ –≤–∞—à–æ–º—É –æ—Å–æ–±–æ–≤–æ–º—É —Ä–∞—Ö—É–Ω–∫—É —ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –í–∞–º–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É —Å–≤–æ—î—ó –ø–æ–¥–æ—Ä–æ–∂—ñ.\n\n"
            "–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–∞–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π –Ω–µ –æ–±–º–µ–∂–µ–Ω–∞."
        )
    elif text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏":
        await update.message.reply_text(
            "üìû –ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏:\n\n"
            "üåê –°–∞–π—Ç: your-site.com\n"
            "üì± Instagram: @your_instagram\n"
            "üì± Facebook: @your_facebook"
        )
    elif text == "üîó –ú–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è":
        await update.message.reply_text(
            f"üîó –í–∞—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:\n"
            f"t.me/TourWithUsBot?start={user.referral_code}",
            parse_mode='Markdown',
            disable_web_page_preview=True
        )
    elif text == "üõ† –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å":
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω
        with Session() as session:
            current_user = session.query(User).filter_by(telegram_id=user.telegram_id).first()
            if current_user and not current_user.is_admin:
                await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ!")
    elif context.user_data.get('waiting_for_tour_request'):
        await handle_tour_request(update, context)
    else:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é")